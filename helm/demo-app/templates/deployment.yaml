{{- $services := list "frontend" "backend" -}}
{{- $root := $ }}  
{{- range $i, $svc := $services }}
{{- $service := index $root.Values $svc }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: d-{{ include "demo-app.fullname" $ }}-{{ $svc }}
  labels:
    {{- with $service.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ $service.replicaCount }}
  selector:
    matchLabels:
      {{- with $service.labels }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
  template:
    metadata:
      labels:
        {{- with $service.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      containers:
        - name: client
          image: "{{ $service.image.repository }}:{{ $service.image.tag | default $root.Chart.AppVersion }}"
          imagePullPolicy: {{ $service.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ $service.service.port }}
              protocol: TCP
          {{- with $service.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $service.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $service.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if $service.configMaps.env.configMapRef }}
          envFrom:
            - configMapRef:
                # implement the option of multiple configmaps
                name: cm-{{ $service.configMaps.env.configMapRef }}
          {{- end }}
          {{- if $service.configMaps.files }}
          volumeMounts:
            {{- range $name, $config := $service.configMaps.files }}
            - name: {{ $name }}
              mountPath: {{ $config.mountPath }}
              {{- if $config.subPath }}
              subPath: {{ $config.subPath }}
              {{- end }}
            {{- end }}
          {{- end }}
      {{- if $service.configMaps.files }}
      volumes:
        {{- range $name, $config := $service.configMaps.files }}
        - name: {{ $name }}
          configMap:
            name: cm-{{ $config.configMapName }}
        {{- end }}
      {{- end }}
{{- end }}